# to build: singularity build --force --fakeroot rmats-turbo-v4.3.0.sif rmats-turbo-v4.3.0.def

BootStrap: docker
From: ubuntu:22.04

%setup

%environment
export CONDA_ROOT_PREFIX=/miniconda3
export PATH=/miniconda3/bin:$PATH

%post
    apt-get update && apt-get -y upgrade
    ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
    export DEBIAN_FRONTEND=noninteractive
    apt-get -yq install libmkl-rt
    # removed roary
    apt-get -y install \
    build-essential \
    cmake \
    libblas-dev \
    liblapack-dev \
    libgsl-dev \
    libssl-dev \
    gfortran \
    curl libcurl4-openssl-dev \
    wget \
    libz-dev zlib1g-dev \
    ca-certificates \
    libarchive13 \
    libglib2.0-0 \
    libxext6 \
    libsm6 \
    libxrender1 \
    git \
    tzdata \
    python3 python-is-python3 \
    python3-pip \
    r-base


    # mamba install and setup
    cd /


#    mkdir -p /miniconda3
#    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /miniconda3/miniconda.sh
#    bash /miniconda3/miniconda.sh -b -u -p /miniconda3
#    rm /miniconda3/miniconda.sh
##    echo '. /miniconda3/bin/activate' >> $SINGULARITY_ENVIRONMENT
#    echo 'eval "$(/bin/micromamba shell hook -s posix)"' >> $SINGULARITY_ENVIRONMENT
#    echo ". /miniconda3/etc/profile.d/conda.sh" >> $SINGULARITY_ENVIRONMENT
#    echo "conda activate rmats" >> $SINGULARITY_ENVIRONMENT
#
#    eval "$(micromamba shell hook -s posix )"
#    . /miniconda3/etc/profile.d/conda.sh
#    export PATH=/miniconda3/bin:$PATH
#
#    conda create -n rmats
#    conda activate rmats

    cd /
    git clone https://github.com/Xinglab/rmats-turbo.git
    cd /rmats-turbo
    git checkout v4.3.0

    sed -i '110 s/./#&/' build_rmats
    pip install Cython
    ./build_rmats

    # install rmats conda dependcies
#    SCRIPT_DIR=/rmats-turbo
#    ALL_REQUIREMENTS="${SCRIPT_DIR}/conda_requirements.txt"
#    PYTHON_REQUIREMENTS="${SCRIPT_DIR}/python_conda_requirements.txt"
#    PAIRED_REQUIREMENTS="${SCRIPT_DIR}/paired_model_conda_requirements.txt"
#    DARTS_REQUIREMENTS="${SCRIPT_DIR}/darts_model_conda_requirements.txt"
#    cp "${PYTHON_REQUIREMENTS}" "${ALL_REQUIREMENTS}"
#    cat "${PAIRED_REQUIREMENTS}" >> "${ALL_REQUIREMENTS}"
#    cat "${DARTS_REQUIREMENTS}" >> "${ALL_REQUIREMENTS}"
#    conda install -c conda-forge --file "${ALL_REQUIREMENTS}"
#
#    # install dep zlib
#    cd /
#    wget https://zlib.net/zlib-1.3.1.tar.gz
#    tar -xvzf zlib-1.3.1.tar.gz
#    cd zlib-1.3.1/
#    ./configure
#    make
#    make install
#    cd ..
#
#    export LD_LIBRARY_PATH=/zlib-1.3.1:$LD_LIBRARY_PATH

#    cd /rmats-turbo
#    sed -i '110 s/./#&/' build_rmats
#    ./build_rmats
#
#    cd ..

#    curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
#    export MAMBA_ROOT_PREFIX=/micromamba
#    eval "$(micromamba shell hook -s posix )"
#    echo 'eval "$(/bin/micromamba shell hook -s posix)"' >> $SINGULARITY_ENVIRONMENT
#    echo "micromamba activate katmap_env" >> $SINGULARITY_ENVIRONMENT
#    cd ..

#    . /miniconda3/bin/activate
#    conda create -n rmats_env python=3.6.12
#    conda activate rmats_env
#
#    # install rmats
#    conda install -c bioconda gsl rmats=4.3.0

#    conda deactivate